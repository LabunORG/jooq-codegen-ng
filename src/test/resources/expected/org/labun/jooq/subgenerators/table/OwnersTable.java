package org.labun.jooq.subgenerators.table;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
* This class is generated by jooq-generator.
*/
@Generated({"jooq-generator:"})
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OwnersTable extends TableImpl<org.labun.jooq.subgenerators.record.OwnersRecord> {

/**
* The reference instance of <code>PUBLIC.OWNERS</code>
*/
public static final OwnersTable OWNERS = new OwnersTable();

  /**
  * The class holding records for this type
  */
  @Override
  public Class<org.labun.jooq.subgenerators.record.OwnersRecord> getRecordType() {
    return org.labun.jooq.subgenerators.record.OwnersRecord.class;
  }

  /**
  * Create an aliased <code>PUBLIC.OWNERS</code> table reference
  */
  public OwnersTable() {
    this(DSL.name("OWNERS"), null);
  }

  /**
  * Create an aliased <code>PUBLIC.OWNERS</code> table reference
  */
  public OwnersTable(String alias) {
    this(DSL.name(alias), OWNERS);
  }

  /**
  * Create an aliased <code>PUBLIC.OWNERS</code> table reference
  */
  public OwnersTable(Name alias) {
    this(alias, OWNERS);
  }

  private OwnersTable(Name alias, Table<org.labun.jooq.subgenerators.record.OwnersRecord> aliased) {
    this(alias, aliased, null);
  }

  private OwnersTable(Name alias, Table<org.labun.jooq.subgenerators.record.OwnersRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, "");
  }

  /**
  * The column <code>PUBLIC.OWNERS.ID</code>.
  */
  public final TableField<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

  /**
  * The column <code>PUBLIC.OWNERS.FIRST_NAME</code>.
  */
  public final TableField<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

  /**
  * The column <code>PUBLIC.OWNERS.LAST_NAME</code>.
  */
  public final TableField<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

  /**
  * The column <code>PUBLIC.OWNERS.ADDRESS</code>.
  */
  public final TableField<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.String> ADDRESS = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

  /**
  * The column <code>PUBLIC.OWNERS.CITY</code>.
  */
  public final TableField<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.String> CITY = createField("CITY", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

  /**
  * The column <code>PUBLIC.OWNERS.TELEPHONE</code>.
  */
  public final TableField<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.String> TELEPHONE = createField("TELEPHONE", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");


  /**
  * {@inheritDoc}
  */
  @Override
  public Schema getSchema() {
    return org.labun.jooq.subgenerators.Public.PUBLIC;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public OwnersTable as(String alias) {
    return new OwnersTable(DSL.name(alias), this);
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public OwnersTable as(Name alias) {
    return new OwnersTable(alias, this);
  }

  /**
  * Rename this table
  */
  @Override
  public OwnersTable rename(String name) {
    return new OwnersTable(DSL.name(name), null);
  }

  /**
  * Rename this table
  */
  @Override
  public OwnersTable rename(Name name) {
    return new OwnersTable(name, null);
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(org.labun.jooq.subgenerators.PublicIndexes.INDEX_8, org.labun.jooq.subgenerators.PublicIndexes.PRIMARY_KEY_8);
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public Identity<org.labun.jooq.subgenerators.record.OwnersRecord, java.lang.Integer> getIdentity() {
    return org.labun.jooq.subgenerators.PublicKeys.IDENTITY_OWNERS;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public UniqueKey<org.labun.jooq.subgenerators.record.OwnersRecord> getPrimaryKey() {
    return org.labun.jooq.subgenerators.PublicKeys.CONSTRAINT_8;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public List<UniqueKey<org.labun.jooq.subgenerators.record.OwnersRecord>> getKeys() {
    return Arrays.<UniqueKey<org.labun.jooq.subgenerators.record.OwnersRecord>>asList(org.labun.jooq.subgenerators.PublicKeys.CONSTRAINT_8);
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public List<ForeignKey<org.labun.jooq.subgenerators.record.OwnersRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<org.labun.jooq.subgenerators.record.OwnersRecord, ?>>asList();
  }
}