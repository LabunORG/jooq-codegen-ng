package org.labun.jooq.subgenerators.record;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
* This class is generated by jooq-generator.
*/
@Generated({"jooq-generator:"})
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SpecialtiesRecord extends UpdatableRecordImpl<SpecialtiesRecord> implements Record2<java.lang.Integer, java.lang.String> {


  /**
  * Setter for <code>PUBLIC.SPECIALTIES.ID</code>
  */
  public SpecialtiesRecord id(java.lang.Integer value) {
    set(0, value);
    return this;
  }

  /**
  * Getter for <code>PUBLIC.SPECIALTIES.ID</code>.
  */
  public java.lang.Integer id() {
    return (java.lang.Integer) get(0);
  }

  /**
  * Setter for <code>PUBLIC.SPECIALTIES.NAME</code>
  */
  public SpecialtiesRecord name(java.lang.String value) {
    set(1, value);
    return this;
  }

  /**
  * Getter for <code>PUBLIC.SPECIALTIES.NAME</code>.
  */
  public java.lang.String name() {
    return (java.lang.String) get(1);
  }


  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
  * {@inheritDoc}
  */
  @Override
  public Record1<java.lang.Integer> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  /**
  * {@inheritDoc}
  */
  @Override
  public Row2<java.lang.Integer, java.lang.String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public Row2<java.lang.Integer, java.lang.String> valuesRow() {
    return (Row2) super.valuesRow();
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public Field<java.lang.Integer> field1() {
    return org.labun.jooq.subgenerators.table.SpecialtiesTable.SPECIALTIES.ID;
  }
  /**
  * {@inheritDoc}
  */
  @Override
  public Field<java.lang.String> field2() {
    return org.labun.jooq.subgenerators.table.SpecialtiesTable.SPECIALTIES.NAME;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public java.lang.Integer component1() {
    return id();
  }
  /**
  * {@inheritDoc}
  */
  @Override
  public java.lang.String component2() {
    return name();
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public java.lang.Integer value1() {
    return id();
  }
  /**
  * {@inheritDoc}
  */
  @Override
  public java.lang.String value2() {
    return name();
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public SpecialtiesRecord value1(java.lang.Integer value) {
    id(value);
    return this;
  }
  /**
  * {@inheritDoc}
  */
  @Override
  public SpecialtiesRecord value2(java.lang.String value) {
    name(value);
    return this;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public SpecialtiesRecord values(java.lang.Integer value1, java.lang.String value2) {
    value1(value1);
    value2(value2);
    return this;
  }


  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
  * Create a detached SpecialtiesRecord
  */
  public SpecialtiesRecord() {
    super(org.labun.jooq.subgenerators.table.SpecialtiesTable.SPECIALTIES);
  }

  /**
  * Create a detached, initialised SpecialtiesRecord
  */
  public SpecialtiesRecord(java.lang.Integer value1, java.lang.String value2) {
    super(org.labun.jooq.subgenerators.table.SpecialtiesTable.SPECIALTIES);

    set(0, value1);
    set(1, value2);
  }
}
