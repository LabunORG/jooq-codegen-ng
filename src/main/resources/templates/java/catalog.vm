package $package;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Schema;
import org.jooq.impl.CatalogImpl;


/**
* This class is generated by jooq-generator.
*/
@Generated({"jooq-generator:"})
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class $className extends CatalogImpl {

  /**
  * The reference instance of <code>$schema.name</code>
  */
  public static final $className INSTANCE = new ${className}();

  /**
  * No further instances allowed
  */
  private ${className}() {
    super("${catalog.name.toUpperCase()}");
  }
#foreach( $schema in $schemas )

  /**
  * The schema <code>$schema.name</code>.
  */
  public final ${schema.simpleSchemaClassName} ${schema.name.toUpperCase()} = ${schema.canonicalSchemaClassName}.${schema.name.toUpperCase()};
#end

  @Override
  public final List<Schema> getSchemas() {
    List result = new ArrayList();
    result.addAll(getSchemas0());
    return result;
  }

  private final List<Schema> getSchemas0() {
    return Arrays.<Schema>asList(#foreach( $schema in $schemas )${schema.name.toUpperCase()}#if( $foreach.hasNext ), #end#end);
  }
}
